2024-10-18 14:07:58,332 - INFO - ================ repairing sphinx-doc__sphinx-7686 ================
2024-10-18 14:08:14,243 - INFO - prompting with message:
We are currently solving the following issue within our repository. Here is the issue text:
--- BEGIN ISSUE ---
autosummary: The members variable for module template contains imported members
**Describe the bug**
autosummary: The members variable for module template contains imported members even if autosummary_imported_members is False.

**To Reproduce**

```
# _templates/autosummary/module.rst
{{ fullname | escape | underline }}

.. automodule:: {{ fullname }}

   .. autosummary::
   {% for item in members %}
      {{ item }}
   {%- endfor %}

```
```
# example.py
import os
```
```
# index.rst
.. autosummary::
   :toctree: generated

   example
```
```
# conf.py
autosummary_generate = True
autosummary_imported_members = False
```

As a result, I got following output:
```
# generated/example.rst
example
=======

.. automodule:: example

   .. autosummary::

      __builtins__
      __cached__
      __doc__
      __file__
      __loader__
      __name__
      __package__
      __spec__
      os
```

**Expected behavior**
The template variable `members` should not contain imported members when `autosummary_imported_members` is False.

**Your project**
No

**Screenshots**
No

**Environment info**
- OS: Mac
- Python version: 3.8.2
- Sphinx version: 3.1.0dev
- Sphinx extensions:  sphinx.ext.autosummary
- Extra tools: No

**Additional context**
No


--- END ISSUE ---


We also have a fail to pass unit test for the given issue. We can use this to help identify and fix the issue. Here is the patch text:
--- BEGIN PATCH ---
diff --git a/tests/roots/test-ext-autosummary/autosummary_dummy_module.py b/tests/roots/test-ext-autosummary/autosummary_dummy_module.py
--- a/tests/roots/test-ext-autosummary/autosummary_dummy_module.py
+++ b/tests/roots/test-ext-autosummary/autosummary_dummy_module.py
@@ -1,4 +1,4 @@
-from os import *  # NOQA
+from os import path  # NOQA
 from typing import Union
 
 
@@ -17,7 +17,23 @@ def baz(self):
         pass
 
 
-def bar(x: Union[int, str], y: int = 1):
+class _Baz:
+    pass
+
+
+def bar(x: Union[int, str], y: int = 1) -> None:
+    pass
+
+
+def _quux():
+    pass
+
+
+class Exc(Exception):
+    pass
+
+
+class _Exc(Exception):
     pass
 
 
diff --git a/tests/test_ext_autosummary.py b/tests/test_ext_autosummary.py
--- a/tests/test_ext_autosummary.py
+++ b/tests/test_ext_autosummary.py
@@ -19,7 +19,10 @@
 from sphinx.ext.autosummary import (
     autosummary_table, autosummary_toc, mangle_signature, import_by_name, extract_summary
 )
-from sphinx.ext.autosummary.generate import AutosummaryEntry, generate_autosummary_docs, main as autogen_main
+from sphinx.ext.autosummary.generate import (
+    AutosummaryEntry, generate_autosummary_content, generate_autosummary_docs,
+    main as autogen_main
+)
 from sphinx.testing.util import assert_node, etree_parse
 from sphinx.util.docutils import new_document
 from sphinx.util.osutil import cd
@@ -189,6 +192,83 @@ def test_escaping(app, status, warning):
     assert str_content(title) == 'underscore_module_'
 
 
+@pytest.mark.sphinx(testroot='ext-autosummary')
+def test_autosummary_generate_content_for_module(app):
+    import autosummary_dummy_module
+    template = Mock()
+
+    generate_autosummary_content('autosummary_dummy_module', autosummary_dummy_module, None,
+                                 template, None, False, app, False, {})
+    assert template.render.call_args[0][0] == 'module'
+
+    context = template.render.call_args[0][1]
+    assert context['members'] == ['Exc', 'Foo', '_Baz', '_Exc', '__builtins__',
+                                  '__cached__', '__doc__', '__file__', '__name__',
+                                  '__package__', '_quux', 'bar', 'qux']
+    assert context['functions'] == ['bar']
+    assert context['all_functions'] == ['_quux', 'bar']
+    assert context['classes'] == ['Foo']
+    assert context['all_classes'] == ['Foo', '_Baz']
+    assert context['exceptions'] == ['Exc']
+    assert context['all_exceptions'] == ['Exc', '_Exc']
+    assert context['attributes'] == ['qux']
+    assert context['all_attributes'] == ['qux']
+    assert context['fullname'] == 'autosummary_dummy_module'
+    assert context['module'] == 'autosummary_dummy_module'
+    assert context['objname'] == ''
+    assert context['name'] == ''
+    assert context['objtype'] == 'module'
+
+
+@pytest.mark.sphinx(testroot='ext-autosummary')
+def test_autosummary_generate_content_for_module_skipped(app):
+    import autosummary_dummy_module
+    template = Mock()
+
+    def skip_member(app, what, name, obj, skip, options):
+        if name in ('Foo', 'bar', 'Exc'):
+            return True
+
+    app.connect('autodoc-skip-member', skip_member)
+    generate_autosummary_content('autosummary_dummy_module', autosummary_dummy_module, None,
+                                 template, None, False, app, False, {})
+    context = template.render.call_args[0][1]
+    assert context['members'] == ['_Baz', '_Exc', '__builtins__', '__cached__', '__doc__',
+                                  '__file__', '__name__', '__package__', '_quux', 'qux']
+    assert context['functions'] == []
+    assert context['classes'] == []
+    assert context['exceptions'] == []
+
+
+@pytest.mark.sphinx(testroot='ext-autosummary')
+def test_autosummary_generate_content_for_module_imported_members(app):
+    import autosummary_dummy_module
+    template = Mock()
+
+    generate_autosummary_content('autosummary_dummy_module', autosummary_dummy_module, None,
+                                 template, None, True, app, False, {})
+    assert template.render.call_args[0][0] == 'module'
+
+    context = template.render.call_args[0][1]
+    assert context['members'] == ['Exc', 'Foo', 'Union', '_Baz', '_Exc', '__builtins__',
+                                  '__cached__', '__doc__', '__file__', '__loader__',
+                                  '__name__', '__package__', '__spec__', '_quux',
+                                  'bar', 'path', 'qux']
+    assert context['functions'] == ['bar']
+    assert context['all_functions'] == ['_quux', 'bar']
+    assert context['classes'] == ['Foo']
+    assert context['all_classes'] == ['Foo', '_Baz']
+    assert context['exceptions'] == ['Exc']
+    assert context['all_exceptions'] == ['Exc', '_Exc']
+    assert context['attributes'] == ['qux']
+    assert context['all_attributes'] == ['qux']
+    assert context['fullname'] == 'autosummary_dummy_module'
+    assert context['module'] == 'autosummary_dummy_module'
+    assert context['objname'] == ''
+    assert context['name'] == ''
+    assert context['objtype'] == 'module'
+
+
 @pytest.mark.sphinx('dummy', testroot='ext-autosummary')
 def test_autosummary_generate(app, status, warning):
     app.builder.build_all()

--- END PATCH ---



Below are some code segments, each from a relevant file. One or more of these files may contain bugs.

--- BEGIN FILE ---
```
### sphinx/ext/autosummary/generate.py
...
            except TemplateNotFound:
                # fallback to base.rst
                template = self.env.get_template('autosummary/base.rst')

        return template.render(context)


# -- Generating output ---------------------------------------------------------


def generate_autosummary_content(name: str, obj: Any, parent: Any,
                                 template: AutosummaryRenderer, template_name: str,
                                 imported_members: bool, app: Any,
                                 recursive: bool, context: Dict) -> str:
    doc = get_documenter(app, obj, parent)

    def skip_member(obj: Any, name: str, objtype: str) -> bool:
        try:
            return app.emit_firstresult('autodoc-skip-member', objtype, name,
                                        obj, False, {})
        except Exception as exc:
            logger.warning(__('autosummary: failed to determine %r to be documented, '
                              'the following exception was raised:\n%s'),
                           name, exc, type='autosummary')
            return False

    def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
                    imported: bool = True) -> Tuple[List[str], List[str]]:
        items = []  # type: List[str]
        public = []  # type: List[str]
        for name in dir(obj):
            try:
                value = safe_getattr(obj, name)
            except AttributeError:
                continue
            documenter = get_documenter(app, value, obj)
            if documenter.objtype in types:
                # skip imported members if expected
                if imported or getattr(value, '__module__', None) == obj.__name__:
                    skipped = skip_member(value, name, documenter.objtype)
                    if skipped is True:
                        pass
                    elif skipped is False:
                        # show the member forcedly
                        items.append(name)
                        public.append(name)
                    else:
                        items.append(name)
                        if name in include_public or not name.startswith('_'):
                            # considers member as public
                            public.append(name)
        return public, items

    def get_module_attrs(members: Any) -> Tuple[List[str], List[str]]:
        """Find module attributes with docstrings."""
        attrs, public = [], []
        try:
            analyzer = ModuleAnalyzer.for_module(name)
            attr_docs = analyzer.find_attr_docs()
            for namespace, attr_name in attr_docs:
                if namespace == '' and attr_name in members:
                    attrs.append(attr_name)
                    if not attr_name.startswith('_'):
                        public.append(attr_name)
        except PycodeError:
            pass    # give up if ModuleAnalyzer fails to parse code
        return public, attrs

    def get_modules(obj: Any) -> Tuple[List[str], List[str]]:
        items = []  # type: List[str]
        for _, modname, ispkg in pkgutil.iter_modules(obj.__path__):
            fullname = name + '.' + modname
            items.append(fullname)
        public = [x for x in items if not x.split('.')[-1].startswith('_')]
        return public, items

    ns = {}  # type: Dict[str, Any]
    ns.update(context)

    if doc.objtype == 'module':
        ns['members'] = dir(obj)
        ns['functions'], ns['all_functions'] = \
            get_members(obj, {'function'}, imported=imported_members)
        ns['classes'], ns['all_classes'] = \
            get_members(obj, {'class'}, imported=imported_members)
        ns['exceptions'], ns['all_exceptions'] = \
            get_members(obj, {'exception'}, imported=imported_members)
        ns['attributes'], ns['all_attributes'] = \
            get_module_attrs(ns['members'])
        ispackage = hasattr(obj, '__path__')
        if ispackage and recursive:
            ns['modules'], ns['all_modules'] = get_modules(obj)
    elif doc.objtype == 'class':
        ns['members'] = dir(obj)
        ns['inherited_members'] = \
            set(dir(obj)) - set(obj.__dict__.keys())
        ns['methods'], ns['all_methods'] = \
            get_members(obj, {'method'}, ['__init__'])
        ns['attributes'], ns['all_attributes'] = \
            get_members(obj, {'attribute', 'property'})

    modname, qualname = split_full_qualified_name(name)
    if doc.objtype in ('method', 'attribute', 'property'):
        ns['class'] = qualname.rsplit(".", 1)[0]

    if doc.objtype in ('class',):
        shortname = qualname
    else:
        shortname = qualname.rsplit(".", 1)[-1]

    ns['fullname'] = name
    ns['module'] = modname
    ns['objname'] = qualname
    ns['name'] = shortname

    ns['objtype'] = doc.objtype
    ns['underline'] = len(name) * '='

    if template_name:
        return template.render(template_name, ns)
    else:
        return template.render(doc.objtype, ns)


def generate_autosummary_docs(sources: List[str], output_dir: str = None,
                              suffix: str = '.rst', warn: Callable = None,
                              info: Callable = None, base_path: str = None,
                              builder: Builder = None, template_dir: str = None,
                              imported_members: bool = False, app: Any = None,
                              overwrite: bool = True) -> None:
    if info:
        warnings.warn('info argument for generate_autosummary_docs() is deprecated.',
...


### sphinx/ext/autosummary/__init__.py
...
               if cls.can_document_member(obj, '', False, parent_doc)]
    if classes:
        classes.sort(key=lambda cls: cls.priority)
        return classes[-1]
    else:
        return DataDocumenter


# -- .. autosummary:: ----------------------------------------------------------

class Autosummary(SphinxDirective):
    """
    Pretty table containing short signatures and summaries of functions etc.

    autosummary can also optionally generate a hidden toctree:: node.
    """

    required_arguments = 0
    optional_arguments = 0
    final_argument_whitespace = False
    has_content = True
    option_spec = {
        'caption': directives.unchanged_required,
        'toctree': directives.unchanged,
        'nosignatures': directives.flag,
        'recursive': directives.flag,
        'template': directives.unchanged,
    }

    def run(self) -> List[Node]:
        self.bridge = DocumenterBridge(self.env, self.state.document.reporter,
                                       Options(), self.lineno, self.state)

        names = [x.strip().split()[0] for x in self.content
                 if x.strip() and re.search(r'^[~a-zA-Z_]', x.strip()[0])]
        items = self.get_items(names)
        nodes = self.get_table(items)

        if 'toctree' in self.options:
            dirname = posixpath.dirname(self.env.docname)

            tree_prefix = self.options['toctree'].strip()
            docnames = []
            excluded = Matcher(self.config.exclude_patterns)
            for name, sig, summary, real_name in items:
                docname = posixpath.join(tree_prefix, real_name)
                docname = posixpath.normpath(posixpath.join(dirname, docname))
                if docname not in self.env.found_docs:
                    location = self.state_machine.get_source_and_line(self.lineno)
                    if excluded(self.env.doc2path(docname, None)):
                        msg = __('autosummary references excluded document %r. Ignored.')
                    else:
                        msg = __('autosummary: stub file not found %r. '
                                 'Check your autosummary_generate setting.')

                    logger.warning(msg, real_name, location=location)
                    continue

                docnames.append(docname)

            if docnames:
                tocnode = addnodes.toctree()
                tocnode['includefiles'] = docnames
                tocnode['entries'] = [(None, docn) for docn in docnames]
                tocnode['maxdepth'] = -1
                tocnode['glob'] = None
                tocnode['caption'] = self.options.get('caption')

                nodes.append(autosummary_toc('', '', tocnode))

        if 'toctree' not in self.options and 'caption' in self.options:
            logger.warning(__('A captioned autosummary requires :toctree: option. ignored.'),
                           location=nodes[-1])

        return nodes

    def get_items(self, names: List[str]) -> List[Tuple[str, str, str, str]]:
        """Try to import the given names, and return a list of
        ``[(name, signature, summary_string, real_name), ...]``.
        """
        prefixes = get_import_prefixes_from_env(self.env)

        items = []  # type: List[Tuple[str, str, str, str]]

        max_item_chars = 50

        for name in names:
            display_name = name
            if name.startswith('~'):
                name = name[1:]
                display_name = name.split('.')[-1]

            try:
                with mock(self.config.autosummary_mock_imports):
                    real_name, obj, parent, modname = import_by_name(name, prefixes=prefixes)
            except ImportError:
                logger.warning(__('autosummary: failed to import %s'), name)
                continue

            self.bridge.result = StringList()  # initialize for each documenter
            full_name = real_name
            if not isinstance(obj, ModuleType):
                # give explicitly separated module name, so that members
                # of inner classes can be documented
                full_name = modname + '::' + full_name[len(modname) + 1:]
            # NB. using full_name here is important, since Documenters
            #     handle module prefixes slightly differently
            doccls = get_documenter(self.env.app, obj, parent)
            documenter = doccls(self.bridge, full_name)
            if not documenter.parse_name():
                logger.warning(__('failed to parse name %s'), real_name)
                items.append((display_name, '', '', real_name))
                continue
            if not documenter.import_object():
                logger.warning(__('failed to import object %s'), real_name)
                items.append((display_name, '', '', real_name))
                continue
            if documenter.options.members and not documenter.check_module():
                continue

            # try to also get a source code analyzer for attribute docs
            try:
                documenter.analyzer = ModuleAnalyzer.for_module(
                    documenter.get_real_modname())
                # parse right now, to get PycodeErrors on parsing (results will
                # be cached anyway)
                documenter.analyzer.find_attr_docs()
            except PycodeError as err:
                logger.debug('[autodoc] module analyzer failed: %s', err)
                # no source file -- e.g. for builtin and C modules
                documenter.analyzer = None

            # -- Grab the signature

            try:
                sig = documenter.format_signature(show_annotation=False)
            except TypeError:
                # the documenter does not support ``show_annotation`` option
                sig = documenter.format_signature()

            if not sig:
                sig = ''
            else:
                max_chars = max(10, max_item_chars - len(display_name))
                sig = mangle_signature(sig, max_chars=max_chars)

            # -- Grab the summary

            documenter.add_content(None)
            summary = extract_summary(self.bridge.result.data[:], self.state.document)

            items.append((display_name, sig, summary, real_name))

        return items

    def get_table(self, items: List[Tuple[str, str, str, str]]) -> List[Node]:
        """Generate a proper list of table nodes for autosummary:: directive.

        *items* is a list produced by :meth:`get_items`.
        """
        table_spec = addnodes.tabular_col_spec()
        table_spec['spec'] = r'\X{1}{2}\X{1}{2}'

        table = autosummary_table('')
        real_table = nodes.table('', classes=['longtable'])
        table.append(real_table)
        group = nodes.tgroup('', cols=2)
        real_table.append(group)
        group.append(nodes.colspec('', colwidth=10))
        group.append(nodes.colspec('', colwidth=90))
        body = nodes.tbody('')
        group.append(body)

        def append_row(*column_texts: str) -> None:
            row = nodes.row('')
            source, line = self.state_machine.get_source_and_line()
            for text in column_texts:
                node = nodes.paragraph('')
                vl = StringList()
                vl.append(text, '%s:%d:<autosummary>' % (source, line))
                with switch_source_input(self.state, vl):
                    self.state.nested_parse(vl, 0, node)
                    try:
                        if isinstance(node[0], nodes.paragraph):
                            node = node[0]
                    except IndexError:
                        pass
                    row.append(nodes.entry('', node))
            body.append(row)

        for name, sig, summary, real_name in items:
            qualifier = 'obj'
            if 'nosignatures' not in self.options:
                col1 = ':%s:`%s <%s>`\\ %s' % (qualifier, name, real_name, rst.escape(sig))
            else:
                col1 = ':%s:`%s <%s>`' % (qualifier, name, real_name)
            col2 = summary
            append_row(col1, col2)

        return [table_spec, table]

    def warn(self, msg: str) -> None:
        warnings.warn('Autosummary.warn() is deprecated',
                      RemovedInSphinx40Warning, stacklevel=2)
        logger.warning(msg)

    @property
    def genopt(self) -> Options:
        warnings.warn('Autosummary.genopt is deprecated',
                      RemovedInSphinx40Warning, stacklevel=2)
        return self.bridge.genopt

    @property
    def warnings(self) -> List[Node]:
        warnings.warn('Autosummary.warnings is deprecated',
                      RemovedInSphinx40Warning, stacklevel=2)
        return []

    @property
    def result(self) -> StringList:
        warnings.warn('Autosummary.result is deprecated',
                      RemovedInSphinx40Warning, stacklevel=2)
        return self.bridge.result


def strip_arg_typehint(s: str) -> str:
    """Strip a type hint from argument definition."""
    return s.split(':')[0].strip()


def mangle_signature(sig: str, max_chars: int = 30) -> str:
    """Reformat a function signature to a more compact form."""
    # Strip return type annotation
...
```
--- END FILE ---

Please first localize the bug based on the issue statement, and then generate *SEARCH/REPLACE* edits to fix the issue.

Every *SEARCH/REPLACE* edit must use this format:
1. The file path
2. The start of search block: <<<<<<< SEARCH
3. A contiguous chunk of lines to search for in the existing source code
4. The dividing line: =======
5. The lines to replace into the source code
6. The end of the replace block: >>>>>>> REPLACE

Here is an example:

```python
### mathweb/flask/app.py
<<<<<<< SEARCH
from flask import Flask
=======
import math
from flask import Flask
>>>>>>> REPLACE
```

Please note that the *SEARCH/REPLACE* edit REQUIRES PROPER INDENTATION. If you would like to add the line '        print(x)', you must fully write that out, with all those spaces before the code!
Wrap the *SEARCH/REPLACE* edit in blocks ```python...```.
2024-10-18 14:08:14,290 - INFO - Creating API request
2024-10-18 14:08:17,196 - INFO - API response ChatCompletion(id='chatcmpl-AJoUg0qvQIQyTNegWyypOHoZB7q9K', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="Based on the issue statement and the provided patch, it seems the problem lies in the `generate_autosummary_content` function within `sphinx/ext/autosummary/generate.py`. Specifically, the `members` variable is not being filtered to exclude imported members when `autosummary_imported_members` is set to `False`.\n\nHere are the necessary *SEARCH/REPLACE* edits to fix the issue:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis change ensures that the `members` variable only includes members that are defined within the module itself when `imported_members` is `False`.", refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1729285694, model='gpt-4o-2024-05-13', object='chat.completion', service_tier=None, system_fingerprint='fp_28a34a3a6a', usage=CompletionUsage(completion_tokens=191, prompt_tokens=5115, total_tokens=5306, completion_tokens_details=CompletionTokensDetails(audio_tokens=None, reasoning_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=None, cached_tokens=0)))
2024-10-18 14:08:17,245 - INFO - Creating API request
2024-10-18 14:08:22,919 - INFO - API response ChatCompletion(id='chatcmpl-AJoUjHybaRkZvmHVtjxiZq0gEb2VP', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="Based on the issue description, it seems the bug is within the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. Specifically, the issue is that the `members` variable includes imported members even when `autosummary_imported_members` is set to `False`.\n\nLet's make the necessary changes to ensure that the `members` variable does not include imported members when `autosummary_imported_members` is set to `False`.\n\nHere are the *SEARCH/REPLACE* edits:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis edit will ensure that the `members` list only includes members from the current module when `imported_members` is `False`.\n\nNow, let's summarize the solution within the patch format:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis should address the issue where imported members are included in the `members` variable even when `autosummary_imported_members` is set to `False`.", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=1, logprobs=None, message=ChatCompletionMessage(content="To fix the issue where the `members` variable for the module template contains imported members even if `autosummary_imported_members` is `False`, we need to filter out the imported members before passing them to the template.\n\nHere's the edit required to filter out the imported members in `generate_autosummary_content` function:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis edit ensures that when `autosummary_imported_members` is `False`, only the members that belong to the module itself are included in the `members` list.\n\nHere is the complete *SEARCH/REPLACE* edit:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nWith this change, the `members` variable will no longer include the imported members when `autosummary_imported_members` is set to `False`. The unit tests should now pass, validating that the bug is fixed.", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=2, logprobs=None, message=ChatCompletionMessage(content="Based on the issue described and the provided information, it seems the problem is in the handling of imported members inside the `generate_autosummary_content` function. Specifically, the `members` variable includes all members regardless of whether they are imported or not. \n\nLet's generate the SEARCH/REPLACE edits to fix the issue. The solution involves filtering the `members` to exclude imported members when `imported_members` is set to `False`.\n\nHere are the necessary changes:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis fix ensures that the `members` variable contains only members that are not imported when `autosummary_imported_members` is set to `False`.", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=3, logprobs=None, message=ChatCompletionMessage(content="Based on the information provided, it looks like the issue is that members of the module (such as imported members) are being included in the `members` list even when `autosummary_imported_members` is set to `False`. The code responsible for this behavior is likely in the `generate_autosummary_content` function.\n\nHere's the *SEARCH/REPLACE* edit to fix the issue:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis edit changes the `members` list to exclude imported members if `imported_members` is `False`, aligning with the expected functionality described in the issue.", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=4, logprobs=None, message=ChatCompletionMessage(content="Here are the modifications necessary to resolve the issue:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis change ensures that the `members` variable only includes the members that belong to the module itself (excluding imported members) when `autosummary_imported_members` is set to `False`.\n\nApplying this change to the appropriate part of `generate_autosummary_content` in `sphinx/ext/autosummary/generate.py` will fix the issue as described.", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=5, logprobs=None, message=ChatCompletionMessage(content="Based on the issue statement and the provided test case, the problem is likely within the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. Specifically, the function is incorrectly including imported members in the `members` list when `autosummary_imported_members` is set to `False`.\n\nLet's address this by modifying the `generate_autosummary_content` function to account for the `imported_members` flag correctly.\n\nHere's the *SEARCH/REPLACE* edit to fix the issue:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis change ensures that the `members` list only includes members that are part of the module itself and not imported ones, unless `imported_members` is set to `True`.", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=6, logprobs=None, message=ChatCompletionMessage(content="```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE\n\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE\n```", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=7, logprobs=None, message=ChatCompletionMessage(content="The bug is localized within the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. Specifically, the issue is related to the `members` variable, which is currently set to `dir(obj)` without filtering according to the `imported_members` argument.\n\nHere is the necessary *SEARCH/REPLACE* edit to fix the issue:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis change ensures that the `members` variable does not include imported members when `autosummary_imported_members` is set to `False`.", refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=8, logprobs=None, message=ChatCompletionMessage(content="Based on the issue, the bug lies in the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. The `members` variable includes imported members even when `autosummary_imported_members` is set to `False`. We need to change the function to exclude imported members from being added to the `members` list when `autosummary_imported_members` is `False`.\n\nHere's the necessary *SEARCH/REPLACE* edit to address the issue:\n\n```python\n### sphinx/ext/autosummary/generate.py\n<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE\n```\n\nThis change ensures that if `imported_members` is `False`, only the members that belong to the module itself will be included in the `members` list.", refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1729285697, model='gpt-4o-2024-05-13', object='chat.completion', service_tier=None, system_fingerprint='fp_28a34a3a6a', usage=CompletionUsage(completion_tokens=1851, prompt_tokens=5115, total_tokens=6966, completion_tokens_details=CompletionTokensDetails(audio_tokens=None, reasoning_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=None, cached_tokens=0)))
2024-10-18 14:08:22,919 - INFO - raw output:
Based on the issue statement and the provided patch, it seems the problem lies in the `generate_autosummary_content` function within `sphinx/ext/autosummary/generate.py`. Specifically, the `members` variable is not being filtered to exclude imported members when `autosummary_imported_members` is set to `False`.

Here are the necessary *SEARCH/REPLACE* edits to fix the issue:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This change ensures that the `members` variable only includes members that are defined within the module itself when `imported_members` is `False`.
2024-10-18 14:08:22,919 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,919 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,919 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,919 - INFO - === edit_commands: ===
2024-10-18 14:08:22,920 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,920 - INFO - 
----------------------------------------
2024-10-18 14:08:22,922 - INFO - extracted patch:
2024-10-18 14:08:22,922 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,922 - INFO - raw output:
Based on the issue description, it seems the bug is within the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. Specifically, the issue is that the `members` variable includes imported members even when `autosummary_imported_members` is set to `False`.

Let's make the necessary changes to ensure that the `members` variable does not include imported members when `autosummary_imported_members` is set to `False`.

Here are the *SEARCH/REPLACE* edits:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This edit will ensure that the `members` list only includes members from the current module when `imported_members` is `False`.

Now, let's summarize the solution within the patch format:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This should address the issue where imported members are included in the `members` variable even when `autosummary_imported_members` is set to `False`.
2024-10-18 14:08:22,922 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,923 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,923 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,923 - INFO - === edit_commands: ===
2024-10-18 14:08:22,923 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,923 - INFO - 
----------------------------------------
2024-10-18 14:08:22,925 - INFO - extracted patch:
2024-10-18 14:08:22,925 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,925 - INFO - raw output:
To fix the issue where the `members` variable for the module template contains imported members even if `autosummary_imported_members` is `False`, we need to filter out the imported members before passing them to the template.

Here's the edit required to filter out the imported members in `generate_autosummary_content` function:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This edit ensures that when `autosummary_imported_members` is `False`, only the members that belong to the module itself are included in the `members` list.

Here is the complete *SEARCH/REPLACE* edit:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
```

With this change, the `members` variable will no longer include the imported members when `autosummary_imported_members` is set to `False`. The unit tests should now pass, validating that the bug is fixed.
2024-10-18 14:08:22,925 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,926 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,926 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,926 - INFO - === edit_commands: ===
2024-10-18 14:08:22,926 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,926 - INFO - 
----------------------------------------
2024-10-18 14:08:22,928 - INFO - extracted patch:
2024-10-18 14:08:22,928 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,928 - INFO - raw output:
Based on the issue described and the provided information, it seems the problem is in the handling of imported members inside the `generate_autosummary_content` function. Specifically, the `members` variable includes all members regardless of whether they are imported or not. 

Let's generate the SEARCH/REPLACE edits to fix the issue. The solution involves filtering the `members` to exclude imported members when `imported_members` is set to `False`.

Here are the necessary changes:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This fix ensures that the `members` variable contains only members that are not imported when `autosummary_imported_members` is set to `False`.
2024-10-18 14:08:22,929 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,929 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,929 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,929 - INFO - === edit_commands: ===
2024-10-18 14:08:22,929 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,929 - INFO - 
----------------------------------------
2024-10-18 14:08:22,931 - INFO - extracted patch:
2024-10-18 14:08:22,932 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,932 - INFO - raw output:
Based on the information provided, it looks like the issue is that members of the module (such as imported members) are being included in the `members` list even when `autosummary_imported_members` is set to `False`. The code responsible for this behavior is likely in the `generate_autosummary_content` function.

Here's the *SEARCH/REPLACE* edit to fix the issue:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This edit changes the `members` list to exclude imported members if `imported_members` is `False`, aligning with the expected functionality described in the issue.
2024-10-18 14:08:22,932 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,932 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,932 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,932 - INFO - === edit_commands: ===
2024-10-18 14:08:22,932 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,932 - INFO - 
----------------------------------------
2024-10-18 14:08:22,935 - INFO - extracted patch:
2024-10-18 14:08:22,935 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,935 - INFO - raw output:
Here are the modifications necessary to resolve the issue:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This change ensures that the `members` variable only includes the members that belong to the module itself (excluding imported members) when `autosummary_imported_members` is set to `False`.

Applying this change to the appropriate part of `generate_autosummary_content` in `sphinx/ext/autosummary/generate.py` will fix the issue as described.
2024-10-18 14:08:22,935 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,935 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,935 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,935 - INFO - === edit_commands: ===
2024-10-18 14:08:22,935 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,935 - INFO - 
----------------------------------------
2024-10-18 14:08:22,937 - INFO - extracted patch:
2024-10-18 14:08:22,938 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,938 - INFO - raw output:
Based on the issue statement and the provided test case, the problem is likely within the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. Specifically, the function is incorrectly including imported members in the `members` list when `autosummary_imported_members` is set to `False`.

Let's address this by modifying the `generate_autosummary_content` function to account for the `imported_members` flag correctly.

Here's the *SEARCH/REPLACE* edit to fix the issue:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This change ensures that the `members` list only includes members that are part of the module itself and not imported ones, unless `imported_members` is set to `True`.
2024-10-18 14:08:22,938 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,938 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,938 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,938 - INFO - === edit_commands: ===
2024-10-18 14:08:22,938 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,938 - INFO - 
----------------------------------------
2024-10-18 14:08:22,941 - INFO - extracted patch:
2024-10-18 14:08:22,941 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,941 - INFO - raw output:
```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE

### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
```
2024-10-18 14:08:22,941 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,941 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,941 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,941 - INFO - === edit_commands: ===
2024-10-18 14:08:22,941 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:22,941 - INFO - 
----------------------------------------
2024-10-18 14:08:22,941 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:22,941 - INFO - 
----------------------------------------
2024-10-18 14:08:22,944 - INFO - extracted patch:
2024-10-18 14:08:22,944 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,944 - INFO - raw output:
The bug is localized within the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. Specifically, the issue is related to the `members` variable, which is currently set to `dir(obj)` without filtering according to the `imported_members` argument.

Here is the necessary *SEARCH/REPLACE* edit to fix the issue:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This change ensures that the `members` variable does not include imported members when `autosummary_imported_members` is set to `False`.
2024-10-18 14:08:22,944 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,944 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,945 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,945 - INFO - === edit_commands: ===
2024-10-18 14:08:22,945 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,945 - INFO - 
----------------------------------------
2024-10-18 14:08:22,947 - INFO - extracted patch:
2024-10-18 14:08:22,947 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:22,947 - INFO - raw output:
Based on the issue, the bug lies in the `generate_autosummary_content` function in the `sphinx/ext/autosummary/generate.py` file. The `members` variable includes imported members even when `autosummary_imported_members` is set to `False`. We need to change the function to exclude imported members from being added to the `members` list when `autosummary_imported_members` is `False`.

Here's the necessary *SEARCH/REPLACE* edit to address the issue:

```python
### sphinx/ext/autosummary/generate.py
<<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
```

This change ensures that if `imported_members` is `False`, only the members that belong to the module itself will be included in the `members` list.
2024-10-18 14:08:22,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:22,947 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:22,947 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:22,947 - INFO - === edit_commands: ===
2024-10-18 14:08:22,947 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:22,947 - INFO - 
----------------------------------------
2024-10-18 14:08:22,949 - INFO - extracted patch:
2024-10-18 14:08:22,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:23,242 - INFO - === file_to_commands: ===
2024-10-18 14:08:23,242 - INFO - === file_to_commands: ===
2024-10-18 14:08:23,242 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:23,242 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:23,242 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:23,242 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:23,242 - INFO - === edit_commands: ===
2024-10-18 14:08:23,242 - INFO - === edit_commands: ===
2024-10-18 14:08:23,242 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:23,242 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:23,243 - INFO - 
----------------------------------------
2024-10-18 14:08:23,243 - INFO - 
----------------------------------------
2024-10-18 14:08:23,244 - INFO - extracted patch:
2024-10-18 14:08:23,244 - INFO - extracted patch:
2024-10-18 14:08:23,244 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:23,244 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:23,806 - INFO - === file_to_commands: ===
2024-10-18 14:08:23,806 - INFO - === file_to_commands: ===
2024-10-18 14:08:23,806 - INFO - === file_to_commands: ===
2024-10-18 14:08:23,807 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:23,807 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:23,807 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:23,807 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:23,807 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:23,807 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:23,807 - INFO - === edit_commands: ===
2024-10-18 14:08:23,807 - INFO - === edit_commands: ===
2024-10-18 14:08:23,807 - INFO - === edit_commands: ===
2024-10-18 14:08:23,807 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:23,807 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:23,807 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:23,807 - INFO - 
----------------------------------------
2024-10-18 14:08:23,807 - INFO - 
----------------------------------------
2024-10-18 14:08:23,807 - INFO - 
----------------------------------------
2024-10-18 14:08:23,808 - INFO - extracted patch:
2024-10-18 14:08:23,808 - INFO - extracted patch:
2024-10-18 14:08:23,808 - INFO - extracted patch:
2024-10-18 14:08:23,808 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:23,808 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:23,808 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,341 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,341 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,341 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,341 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,342 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,342 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,342 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,342 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,342 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,342 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,342 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,342 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,342 - INFO - === edit_commands: ===
2024-10-18 14:08:24,342 - INFO - === edit_commands: ===
2024-10-18 14:08:24,342 - INFO - === edit_commands: ===
2024-10-18 14:08:24,342 - INFO - === edit_commands: ===
2024-10-18 14:08:24,342 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,342 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,342 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,342 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,342 - INFO - 
----------------------------------------
2024-10-18 14:08:24,342 - INFO - 
----------------------------------------
2024-10-18 14:08:24,342 - INFO - 
----------------------------------------
2024-10-18 14:08:24,342 - INFO - 
----------------------------------------
2024-10-18 14:08:24,343 - INFO - extracted patch:
2024-10-18 14:08:24,343 - INFO - extracted patch:
2024-10-18 14:08:24,343 - INFO - extracted patch:
2024-10-18 14:08:24,343 - INFO - extracted patch:
2024-10-18 14:08:24,343 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,343 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,343 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,343 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,834 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,834 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,834 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,834 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,834 - INFO - === file_to_commands: ===
2024-10-18 14:08:24,835 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,835 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,835 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,835 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,835 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:24,835 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,835 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,835 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,835 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,835 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:24,835 - INFO - === edit_commands: ===
2024-10-18 14:08:24,835 - INFO - === edit_commands: ===
2024-10-18 14:08:24,835 - INFO - === edit_commands: ===
2024-10-18 14:08:24,835 - INFO - === edit_commands: ===
2024-10-18 14:08:24,835 - INFO - === edit_commands: ===
2024-10-18 14:08:24,835 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,835 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,835 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,835 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,835 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:24,835 - INFO - 
----------------------------------------
2024-10-18 14:08:24,835 - INFO - 
----------------------------------------
2024-10-18 14:08:24,835 - INFO - 
----------------------------------------
2024-10-18 14:08:24,835 - INFO - 
----------------------------------------
2024-10-18 14:08:24,835 - INFO - 
----------------------------------------
2024-10-18 14:08:24,836 - INFO - extracted patch:
2024-10-18 14:08:24,836 - INFO - extracted patch:
2024-10-18 14:08:24,836 - INFO - extracted patch:
2024-10-18 14:08:24,836 - INFO - extracted patch:
2024-10-18 14:08:24,836 - INFO - extracted patch:
2024-10-18 14:08:24,836 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,836 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,836 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,836 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:24,836 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [m for m in dir(obj) if getattr(obj, m).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,270 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,270 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,270 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,270 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,270 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,270 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,271 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,271 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,271 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,271 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,271 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,271 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,271 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,271 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,271 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,271 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,271 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,271 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,271 - INFO - === edit_commands: ===
2024-10-18 14:08:25,271 - INFO - === edit_commands: ===
2024-10-18 14:08:25,271 - INFO - === edit_commands: ===
2024-10-18 14:08:25,271 - INFO - === edit_commands: ===
2024-10-18 14:08:25,271 - INFO - === edit_commands: ===
2024-10-18 14:08:25,271 - INFO - === edit_commands: ===
2024-10-18 14:08:25,271 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,271 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,271 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,271 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,271 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,271 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,271 - INFO - 
----------------------------------------
2024-10-18 14:08:25,271 - INFO - 
----------------------------------------
2024-10-18 14:08:25,271 - INFO - 
----------------------------------------
2024-10-18 14:08:25,271 - INFO - 
----------------------------------------
2024-10-18 14:08:25,271 - INFO - 
----------------------------------------
2024-10-18 14:08:25,271 - INFO - 
----------------------------------------
2024-10-18 14:08:25,272 - INFO - extracted patch:
2024-10-18 14:08:25,272 - INFO - extracted patch:
2024-10-18 14:08:25,272 - INFO - extracted patch:
2024-10-18 14:08:25,272 - INFO - extracted patch:
2024-10-18 14:08:25,272 - INFO - extracted patch:
2024-10-18 14:08:25,272 - INFO - extracted patch:
2024-10-18 14:08:25,272 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,272 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,272 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,272 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,272 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,272 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj) if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,805 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,805 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,805 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,805 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,805 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,805 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,805 - INFO - === file_to_commands: ===
2024-10-18 14:08:25,806 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,806 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,806 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,806 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,806 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,806 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,806 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:25,806 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,806 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,806 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,806 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,806 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,806 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,806 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:25,806 - INFO - === edit_commands: ===
2024-10-18 14:08:25,806 - INFO - === edit_commands: ===
2024-10-18 14:08:25,806 - INFO - === edit_commands: ===
2024-10-18 14:08:25,806 - INFO - === edit_commands: ===
2024-10-18 14:08:25,806 - INFO - === edit_commands: ===
2024-10-18 14:08:25,806 - INFO - === edit_commands: ===
2024-10-18 14:08:25,806 - INFO - === edit_commands: ===
2024-10-18 14:08:25,806 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,806 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,806 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,806 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,806 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,806 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,806 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:25,806 - INFO - 
----------------------------------------
2024-10-18 14:08:25,806 - INFO - 
----------------------------------------
2024-10-18 14:08:25,806 - INFO - 
----------------------------------------
2024-10-18 14:08:25,806 - INFO - 
----------------------------------------
2024-10-18 14:08:25,806 - INFO - 
----------------------------------------
2024-10-18 14:08:25,806 - INFO - 
----------------------------------------
2024-10-18 14:08:25,806 - INFO - 
----------------------------------------
2024-10-18 14:08:25,807 - INFO - extracted patch:
2024-10-18 14:08:25,807 - INFO - extracted patch:
2024-10-18 14:08:25,807 - INFO - extracted patch:
2024-10-18 14:08:25,807 - INFO - extracted patch:
2024-10-18 14:08:25,807 - INFO - extracted patch:
2024-10-18 14:08:25,807 - INFO - extracted patch:
2024-10-18 14:08:25,807 - INFO - extracted patch:
2024-10-18 14:08:25,807 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,807 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,807 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,807 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,807 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,807 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:25,807 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,411 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - === edit_commands: ===
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,412 - INFO - 
----------------------------------------
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - extracted patch:
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,413 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [m for m in dir(obj) if imported_members or getattr(obj, m, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - === file_to_commands: ===
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,896 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n                    imported: bool = True) -> Tuple[List[str], List[str]]:\n=======\n                    imported: bool = False) -> Tuple[List[str], List[str]]:\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - === edit_commands: ===
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
                    imported: bool = True) -> Tuple[List[str], List[str]]:
=======
                    imported: bool = False) -> Tuple[List[str], List[str]]:
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
>>>>>>> REPLACE
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,897 - INFO - 
----------------------------------------
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - extracted patch:
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:26,898 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -193,7 +193,7 @@
             return False
 
     def get_members(obj: Any, types: Set[str], include_public: List[str] = [],
-                    imported: bool = True) -> Tuple[List[str], List[str]]:
+                    imported: bool = False) -> Tuple[List[str], List[str]]:
         items = []  # type: List[str]
         public = []  # type: List[str]
         for name in dir(obj):
@@ -246,7 +246,7 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +259,7 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = get_members(obj, {'function', 'class', 'exception', 'attribute'}, imported=imported_members)[1]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        ns['members'] = [name for name in dir(obj)\n                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,461 - INFO - === edit_commands: ===
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        ns['members'] = [name for name in dir(obj)
                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,462 - INFO - 
----------------------------------------
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - extracted patch:
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,463 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,8 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +260,8 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        ns['members'] = [name for name in dir(obj)
+                         if imported_members or getattr(obj, name, None).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,947 - INFO - === file_to_commands: ===
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - {
  "'sphinx/ext/autosummary/generate.py'": [
    "<<<<<<< SEARCH\n        ns['members'] = dir(obj)\n=======\n        if imported_members:\n            ns['members'] = dir(obj)\n        else:\n            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]\n>>>>>>> REPLACE"
  ]
}
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edited_file: 'sphinx/ext/autosummary/generate.py' ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - === edit_commands: ===
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - <<<<<<< SEARCH
        ns['members'] = dir(obj)
=======
        if imported_members:
            ns['members'] = dir(obj)
        else:
            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
>>>>>>> REPLACE
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,948 - INFO - 
----------------------------------------
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - extracted patch:
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
2024-10-18 14:08:27,949 - INFO - --- sphinx/ext/autosummary/generate.py
+++ sphinx/ext/autosummary/generate.py
@@ -246,7 +246,10 @@
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -259,7 +262,10 @@
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
     elif doc.objtype == 'class':
-        ns['members'] = dir(obj)
+        if imported_members:
+            ns['members'] = dir(obj)
+        else:
+            ns['members'] = [name for name in dir(obj) if getattr(obj, name).__module__ == obj.__name__]
         ns['inherited_members'] = \
             set(dir(obj)) - set(obj.__dict__.keys())
         ns['methods'], ns['all_methods'] = \
