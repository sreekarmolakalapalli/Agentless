2024-10-18 13:24:03,444 - INFO - ================ repairing pytest-dev__pytest-5227 ================
2024-10-18 13:24:10,193 - INFO - prompting with message:
We are currently solving the following issue within our repository. Here is the issue text:
--- BEGIN ISSUE ---
Improve default logging format
Currently it is:

> DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"

I think `name` (module name) would be very useful here, instead of just the base filename.

(It might also be good to have the relative path there (maybe at the end), but it is usually still very long (but e.g. `$VIRTUAL_ENV` could be substituted therein))

Currently it would look like this:
```
utils.py                   114 DEBUG    (0.000) SELECT "app_url"."id", "app_url"."created", "app_url"."url" FROM "app_url" WHERE "app_url"."id" = 2; args=(2,)
multipart.py               604 DEBUG    Calling on_field_start with no data
```


Using `DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"` instead:

```
DEBUG    django.db.backends:utils.py:114 (0.000) SELECT "app_url"."id", "app_url"."created", "app_url"."url" FROM "app_url" WHERE "app_url"."id" = 2; args=(2,)
DEBUG    multipart.multipart:multipart.py:604 Calling on_field_start with no data
```

--- END ISSUE ---


We also have a fail to pass unit test for the given issue. We can use this to help identify and fix the issue. Here is the patch text:
--- BEGIN PATCH ---
diff --git a/testing/logging/test_reporting.py b/testing/logging/test_reporting.py
--- a/testing/logging/test_reporting.py
+++ b/testing/logging/test_reporting.py
@@ -248,7 +248,7 @@ def test_log_cli():
             [
                 "test_log_cli_enabled_disabled.py::test_log_cli ",
                 "*-- live log call --*",
-                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
+                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",
                 "PASSED*",
             ]
         )
@@ -282,7 +282,7 @@ def test_log_cli(request):
     result.stdout.fnmatch_lines(
         [
             "test_log_cli_default_level.py::test_log_cli ",
-            "test_log_cli_default_level.py*WARNING message will be shown*",
+            "WARNING*test_log_cli_default_level.py* message will be shown*",
         ]
     )
     assert "INFO message won't be shown" not in result.stdout.str()
@@ -523,7 +523,7 @@ def test_log_1(fix):
     )
     assert (
         re.search(
-            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log teardown(.+)\nWARNING(.+)\nWARNING(.+)",
             result.stdout.str(),
             re.MULTILINE,
         )
@@ -531,7 +531,7 @@ def test_log_1(fix):
     )
     assert (
         re.search(
-            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
             result.stdout.str(),
             re.MULTILINE,
         )
@@ -565,7 +565,7 @@ def test_log_cli(request):
     # fnmatch_lines does an assertion internally
     result.stdout.fnmatch_lines(
         [
-            "test_log_cli_level.py*This log message will be shown",
+            "*test_log_cli_level.py*This log message will be shown",
             "PASSED",  # 'PASSED' on its own line because the log message prints a new line
         ]
     )
@@ -579,7 +579,7 @@ def test_log_cli(request):
     # fnmatch_lines does an assertion internally
     result.stdout.fnmatch_lines(
         [
-            "test_log_cli_level.py* This log message will be shown",
+            "*test_log_cli_level.py* This log message will be shown",
             "PASSED",  # 'PASSED' on its own line because the log message prints a new line
         ]
     )
@@ -615,7 +615,7 @@ def test_log_cli(request):
     # fnmatch_lines does an assertion internally
     result.stdout.fnmatch_lines(
         [
-            "test_log_cli_ini_level.py* This log message will be shown",
+            "*test_log_cli_ini_level.py* This log message will be shown",
             "PASSED",  # 'PASSED' on its own line because the log message prints a new line
         ]
     )

--- END PATCH ---



Below are some code segments, each from a relevant file. One or more of these files may contain bugs.

--- BEGIN FILE ---
```
### src/_pytest/logging.py
...
from contextlib import contextmanager

import py
import six

import pytest
from _pytest.compat import dummy_context_manager
from _pytest.config import create_terminal_writer
from _pytest.pathlib import Path

DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"


class ColoredLevelFormatter(logging.Formatter):
    """
    Colorize the %(levelname)..s part of the log format passed to __init__.
    """

    LOGLEVEL_COLOROPTS = {
        logging.CRITICAL: {"red"},
...
# run after terminalreporter/capturemanager are configured
@pytest.hookimpl(trylast=True)
def pytest_configure(config):
    config.pluginmanager.register(LoggingPlugin(config), "logging-plugin")


class LoggingPlugin(object):
    """Attaches to the logging module and captures log messages for each test.
    """

    def __init__(self, config):
        """Creates a new plugin to capture log messages.

        The formatter can be safely shared across all handlers so
        create a single one for the entire test session here.
        """
        self._config = config

        # enable verbose output automatically if live logging is enabled
        if self._log_cli_enabled() and config.getoption("verbose") < 1:
            config.option.verbose = 1

        self.print_logs = get_option_ini(config, "log_print")
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
        self.log_level = get_actual_log_level(config, "log_level")

        self.log_file_level = get_actual_log_level(config, "log_file_level")
        self.log_file_format = get_option_ini(config, "log_file_format", "log_format")
        self.log_file_date_format = get_option_ini(
            config, "log_file_date_format", "log_date_format"
        )
        self.log_file_formatter = logging.Formatter(
            self.log_file_format, datefmt=self.log_file_date_format
        )

        log_file = get_option_ini(config, "log_file")
        if log_file:
            self.log_file_handler = logging.FileHandler(
                log_file, mode="w", encoding="UTF-8"
            )
            self.log_file_handler.setFormatter(self.log_file_formatter)
        else:
            self.log_file_handler = None

        self.log_cli_handler = None

        self.live_logs_context = lambda: dummy_context_manager()
        # Note that the lambda for the live_logs_context is needed because
        # live_logs_context can otherwise not be entered multiple times due
        # to limitations of contextlib.contextmanager.

        if self._log_cli_enabled():
            self._setup_cli_logging()

    def _setup_cli_logging(self):
        config = self._config
        terminal_reporter = config.pluginmanager.get_plugin("terminalreporter")
        if terminal_reporter is None:
            # terminal reporter is disabled e.g. by pytest-xdist.
            return

        capture_manager = config.pluginmanager.get_plugin("capturemanager")
        # if capturemanager plugin is disabled, live logging still works.
        log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
        log_cli_date_format = get_option_ini(
            config, "log_cli_date_format", "log_date_format"
        )
        if (
            config.option.color != "no"
            and ColoredLevelFormatter.LEVELNAME_FMT_REGEX.search(log_cli_format)
        ):
            log_cli_formatter = ColoredLevelFormatter(
                create_terminal_writer(config),
                log_cli_format,
                datefmt=log_cli_date_format,
            )
        else:
            log_cli_formatter = logging.Formatter(
                log_cli_format, datefmt=log_cli_date_format
            )
        log_cli_level = get_actual_log_level(config, "log_cli_level", "log_level")
        self.log_cli_handler = log_cli_handler
        self.live_logs_context = lambda: catching_logs(
            log_cli_handler, formatter=log_cli_formatter, level=log_cli_level
        )

    def set_log_path(self, fname):
        """Public method, which can set filename parameter for
        Logging.FileHandler(). Also creates parent directory if
        it does not exist.

        .. warning::
            Please considered as an experimental API.
        """
        fname = Path(fname)
...


### src/_pytest/terminal.py
...
        if "KeyboardInterrupt" in msg:
            if self.config.option.fulltrace:
                excrepr.toterminal(self._tw)
            else:
                excrepr.reprcrash.toterminal(self._tw)
                self._tw.line(
                    "(to show a full traceback on KeyboardInterrupt use --fulltrace)",
                    yellow=True,
                )

    def _locationline(self, nodeid, fspath, lineno, domain):
        def mkrel(nodeid):
            line = self.config.cwd_relative_nodeid(nodeid)
            if domain and line.endswith(domain):
                line = line[: -len(domain)]
                values = domain.split("[")
                values[0] = values[0].replace(".", "::")  # don't replace '.' in params
                line += "[".join(values)
            return line

        # collect_fspath comes from testid which has a "/"-normalized path

        if fspath:
            res = mkrel(nodeid)
            if self.verbosity >= 2 and nodeid.split("::")[0] != fspath.replace(
                "\\", nodes.SEP
            ):
                res += " <- " + self.startdir.bestrelpath(fspath)
        else:
            res = "[location]"
        return res + " "

    def _getfailureheadline(self, rep):
        head_line = rep.head_line
        if head_line:
            return head_line
        return "test session"  # XXX?

    def _getcrashline(self, rep):
        try:
            return str(rep.longrepr.reprcrash)
...
```
--- END FILE ---

Please first localize the bug based on the issue statement, and then generate *SEARCH/REPLACE* edits to fix the issue.

Every *SEARCH/REPLACE* edit must use this format:
1. The file path
2. The start of search block: <<<<<<< SEARCH
3. A contiguous chunk of lines to search for in the existing source code
4. The dividing line: =======
5. The lines to replace into the source code
6. The end of the replace block: >>>>>>> REPLACE

Here is an example:

```python
### mathweb/flask/app.py
<<<<<<< SEARCH
from flask import Flask
=======
import math
from flask import Flask
>>>>>>> REPLACE
```

Please note that the *SEARCH/REPLACE* edit REQUIRES PROPER INDENTATION. If you would like to add the line '        print(x)', you must fully write that out, with all those spaces before the code!
Wrap the *SEARCH/REPLACE* edit in blocks ```python...```.
2024-10-18 13:24:10,254 - INFO - Creating API request
2024-10-18 13:24:17,586 - INFO - API response ChatCompletion(id='chatcmpl-AJno2tjs5MdhsOqBpYEIi0YNEqxkO', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Based on the issue statement and the provided patch, it seems the main problem is with the default logging format. We need to update the `DEFAULT_LOG_FORMAT` to include the `name` (module name) and adjust the unit tests accordingly.\n\nHere are the necessary *SEARCH/REPLACE* edits:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\nThe unit tests in `testing/logging/test_reporting.py` need to be updated to match the new log format:\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n=======\n                "CRITICAL *test_log_cli_enabled_disabled.py*test_log_cli_enabled_disabled.py* critical message logged by test",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_default_level.py*WARNING message will be shown*",\n=======\n            "WARNING*test_log_cli_default_level.py*test_log_cli_default_level.py* message will be shown*",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_level.py*This log message will be shown",\n=======\n            "*test_log_cli_level.py*test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_level.py* This log message will be shown",\n=======\n            "*test_log_cli_level.py*test_log_cli_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_ini_level.py* This log message will be shown",\n=======\n            "*test_log_cli_ini_level.py*test_log_cli_ini_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\nThese changes should address the issue by updating the default logging format and ensuring the unit tests reflect the new format.', refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1729283050, model='gpt-4o-2024-05-13', object='chat.completion', service_tier=None, system_fingerprint='fp_28a34a3a6a', usage=CompletionUsage(completion_tokens=612, prompt_tokens=2560, total_tokens=3172, completion_tokens_details=CompletionTokensDetails(audio_tokens=None, reasoning_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=None, cached_tokens=0)))
2024-10-18 13:24:17,721 - INFO - Creating API request
2024-10-18 13:24:30,839 - INFO - API response ChatCompletion(id='chatcmpl-AJnoAHv6WEP8sZBmnQ2s6d05Ifmv2', choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChatCompletionMessage(content='The issue is related to changing the default logging format to include the module name (`name`) instead of just the filename (`filename`). We also need to update the unit tests to reflect this new format.\n\nLet\'s go ahead and make the necessary changes based on the provided issue and patch texts.\n\nHere are the *SEARCH/REPLACE* edits:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\nNext, we need to update the unit tests to match the new format:\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n=======\n                "CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_default_level.py*WARNING message will be shown*",\n=======\n            "WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log teardown(.+)\\nWARNING(.+)\\n+WARNING(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log finish(.+)\\nWARNING(.+)\\n+WARNING(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_level.py*This log message will be shown",\n=======\n            "*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_level.py* This log message will be shown",\n=======\n            "*pytest_testing.logging.test_reporting:test_log_cli_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_ini_level.py* This log message will be shown",\n=======\n            "*pytest_testing.logging.test_reporting:test_log_cli_ini_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\nThese changes should update the logging format and ensure that the unit tests are checking for the new format as well. \n\nHere is how the full set of changes would look:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n=======\n                "CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test",\n>>>>>>> REPLACE\n```\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_default_level.py*WARNING message will be shown*",\n=======\n            "WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*",\n>>>>>>> REPLACE\n```\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log teardown(.+)\\nWARNING(.+)\\n+WARNING(.+)",\n>>>>>>> REPLACE\n```\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log finish(.+)\\nWARNING(.+)\\n+WARNING(.+)",\n>>>>>>> REPLACE\n```\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_level.py*This log message will be shown",\n=======\n            "*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n```\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_level.py', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=1, logprobs=None, message=ChatCompletionMessage(content='Based on the issue description and the failed unit test, it seems that the problem is primarily with the `DEFAULT_LOG_FORMAT` in the `_pytest/logging.py` file. The user wants to include the module name (`name`) in the log format. Let\'s localize the bug and provide the necessary changes to fix it.\n\nHere are the necessary *SEARCH/REPLACE* edits:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\nLet\'s review the changes and ensure the `log_cli_format` uses the updated `DEFAULT_LOG_FORMAT`:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")\n=======\n        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE\n```\n\nThat should cover the necessary changes. The updated log format will include the module name, filename, and line number, as requested.\n\nThe complete list of changes is as follows:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n\n### src/_pytest/logging.py\n<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")\n=======\n        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE\n```\n\nThese updates should fix the issue as described and make sure the logging format includes the module name.', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=2, logprobs=None, message=ChatCompletionMessage(content='Based on the issue statement and the provided patch, the problem seems to be with the logging format. The current format uses `%(filename)` which only includes the base filename. The proposed format should include `%(name)s` (the module name) and possibly `%(pathname)s` (the full path).\n\nTo implement this, we will update the `DEFAULT_LOG_FORMAT` in the `src/_pytest/logging.py` file. Here are the necessary changes:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\nThis change updates the logging format to include the module name (`%(name)s`), the base filename (`%(filename)s`), and the line number (`%(lineno)d`), preceded by the log level (`%(levelname)-8s`).\n\nNext, we need to ensure that this format is used in the appropriate context within the `LoggingPlugin` class. Specifically, this format should be used when setting up CLI logging. Thus, we will also update the `_setup_cli_logging` method:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")\n=======\n        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE\n```\n\nThis ensures that the default format is correctly picked up if not otherwise specified in the configuration.\n\nThese changes should address the issue and ensure that the new logging format is correctly applied.', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=3, logprobs=None, message=ChatCompletionMessage(content='To address the issue, we need to update the `DEFAULT_LOG_FORMAT` to include the module name (`name`) as specified in the new format. The tests also need to validate the new format. Let\'s perform the necessary changes.\n\n### File 1: `src/_pytest/logging.py`\n\nWe need to update the `DEFAULT_LOG_FORMAT` to the new format specified in the issue.\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\n### File 2: `testing/logging/test_reporting.py`\n\nThe tests rely on the old format, so we\'ll update the expected log lines to match the new format.\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n=======\n                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",\n>>>>>>> REPLACE\n\n<<<<<<< SEARCH\n            "test_log_cli_default_level.py*WARNING message will be shown*",\n=======\n            "WARNING*test_log_cli_default_level.py* message will be shown*",\n>>>>>>> REPLACE\n\n<<<<<<< SEARCH\n            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n\n<<<<<<< SEARCH\n            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n\n<<<<<<< SEARCH\n            "test_log_cli_level.py*This log message will be shown",\n=======\n            "*test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n\n<<<<<<< SEARCH\n            "test_log_cli_level.py* This log message will be shown",\n=======\n            "*test_log_cli_level.py* This log message will be shown",\n>>>>>>> REPLACE\n\n<<<<<<< SEARCH\n            "test_log_cli_ini_level.py* This log message will be shown",\n=======\n            "*test_log_cli_ini_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\nThese changes update the logging format in the main configuration and update the unit tests to align with the new logging format. Now the logs will include the log level, module name, filename, line number, and the message, as specified in the issue description.', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=4, logprobs=None, message=ChatCompletionMessage(content='Based on the issue statement, we need to modify the `DEFAULT_LOG_FORMAT` to include the `name` attribute for better logging details. This change will primarily take place in the `src/_pytest/logging.py` file. Along with that, the relevant test cases need to be updated to reflect this new format.\n\nHere are the necessary *SEARCH/REPLACE* edits:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n\n\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n=======\n                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",\n>>>>>>> REPLACE\n<<<<<<< SEARCH\n            "test_log_cli_default_level.py*WARNING message will be shown*",\n=======\n            "WARNING*test_log_cli_default_level.py* message will be shown*",\n>>>>>>> REPLACE\n<<<<<<< SEARCH\n            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n<<<<<<< SEARCH\n            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n<<<<<<< SEARCH\n            "test_log_cli_level.py*This log message will be shown",\n=======\n            "*test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n<<<<<<< SEARCH\n            "test_log_cli_level.py* This log message will be shown",\n=======\n            "*test_log_cli_level.py* This log message will be shown",\n>>>>>>> REPLACE\n<<<<<<< SEARCH\n            "test_log_cli_ini_level.py* This log message will be shown",\n=======\n            "*test_log_cli_ini_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\nThese changes update the default logging format and ensure that the tests are checking the correct format. Specifically, the format now includes the `name` (module name) along with the filename and line number, providing more detailed log information.', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='length', index=5, logprobs=None, message=ChatCompletionMessage(content='Based on the issue statement, it appears that the modification needs to be done in the logging format specified in the `DEFAULT_LOG_FORMAT` and potentially other related log formats within the `_pytest/logging.py` file. The tests provided suggest changes to the expected log output.\n\nHere are the necessary changes:\n\n1. Update the `DEFAULT_LOG_FORMAT` to include the module name (`name`) alongside the filename.\n2. Ensure related instances where the log format is used are updated accordingly.\n\nHere\'s the *SEARCH/REPLACE* edit to address the issue:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\nGiven that `DEFAULT_LOG_FORMAT` is used to initialize the formatter in the `LoggingPlugin` class, we should also ensure changes in `_setup_cli_logging` method to match the new format.\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, "log_format"),\n            get_option_ini(config, "log_date_format"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),\n            get_option_ini(config, "log_date_format"),\n        )\n>>>>>>> REPLACE\n```\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")\n=======\n        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")\n>>>>>>> REPLACE\n```\n\nThese changes should ensure that the new log format includes the module name and integrates seamlessly with the existing setup.\n\nNext, update the test cases to match the new format:\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n+                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",\n=======\n-                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",\n+                "CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            "test_log_cli_default_level.py*WARNING message will be shown*",\n+            "WARNING*test_log_cli_default_level.py* message will be shown*",\n=======\n-            "WARNING*test_log_cli_default_level.py* message will be shown*",\n+            "WARNING*test_log_cli_default_level.py:25* message will be shown*",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n+            r"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)",\n=======\n-            r"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)",\n+            r"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n+            r"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)",\n=======\n-            r"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)",\n+            r"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            "*test_log_cli_level.py*This log message will be shown",\n+            "PASSED",  # \'PASSED\' on its own line because the log message prints a new line\n=======\n-            "PASSED",  # \'PASSED\' on its own line because the log message prints a new line\n+            "WARNING*test_log_cli_level.py:60*This log message will be shown",\n             "PASSED",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            "*test_log_cli_level.py* This log message will be shown",\n+            "PASSED",  # \'PASSED\' on its own line because the log message prints a new line\n=======\n-           ', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=6, logprobs=None, message=ChatCompletionMessage(content='Based on the issue statement and the provided code snippets, it appears that the issue lies in the default logging format and how it is handled within the `LoggingPlugin` class. The unit tests\' outputs also indicate that the logging format does not match the expected format.\n\nLet\'s focus on updating the `DEFAULT_LOG_FORMAT` to include the `name` (module name) and ensure the unit tests reflect this format.\n\nHere are the required *SEARCH/REPLACE* edits:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\nUpdating the test expectations to match the new log format:\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n+                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",\n=======\n-                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n+                "CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            "test_log_cli_default_level.py*WARNING message will be shown*",\n+            "WARNING*test_log_cli_default_level.py* message will be shown*",\n=======\n-            "test_log_cli_default_level.py*WARNING message will be shown*",\n+            "WARNING*test_log_cli_default_level.py*message will be shown*",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n+            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n-            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n+            r"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n+            r"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)",\n=======\n-            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n+            r"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            "test_log_cli_level.py* This log message will be shown",\n+            "*test_log_cli_level.py* This log message will be shown",\n=======\n-            "test_log_cli_level.py* This log message will be shown",\n+            "*test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            "test_log_cli_level.py* This log message will be shown",\n+            "*test_log_cli_level.py* This log message will be shown",\n=======\n-            "test_log_cli_level.py* This log message will be shown",\n+            "*test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n-            "test_log_cli_ini_level.py* This log message will be shown",\n+            "*test_log_cli_ini_level.py* This log message will be shown",\n=======\n-            "test_log_cli_ini_level.py* This log message will be shown",\n+            "*test_log_cli_ini_level.py*This log message will be shown",\n>>>>>>> REPLACE\n```\n\nWith these changes, your logging format will include the module name, and the unit tests will match the expected output format.', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=7, logprobs=None, message=ChatCompletionMessage(content='Based on the provided issue statement and the failing unit tests, it seems like we need to improve the default logging format in the `LoggingPlugin` class in the `src/_pytest/logging.py` file. Specifically, we need to adjust the `DEFAULT_LOG_FORMAT` to include the module name (`name`) along with the filename.\n\nHere is the proposed *SEARCH/REPLACE* edit to fix the issue:\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\nThis should fix the logging format issue as described in the repository issue. The unit tests have also been modified to match the new logging format, where the log level appears first, followed by the module name, filename, and line number.\n\nApplying this change should resolve the formatting problem and ensure that the log output includes the module name as requested.', refusal=None, role='assistant', function_call=None, tool_calls=None)), Choice(finish_reason='stop', index=8, logprobs=None, message=ChatCompletionMessage(content='Based on the issue statement and the provided patch, we need to improve the default logging format to include the module name and adjust the unit tests accordingly. Let\'s generate the required *SEARCH/REPLACE* edits.\n\n### Step 1: Update the Default Log Format in `src/_pytest/logging.py`\n\n```python\n### src/_pytest/logging.py\n<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"\n=======\nDEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"\n>>>>>>> REPLACE\n```\n\n### Step 2: Ensure the Tests Match the New Log Format in `testing/logging/test_reporting.py`\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",\n=======\n                "CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "test_log_cli_default_level.py*WARNING message will be shown*",\n=======\n            "WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            r"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)",\n=======\n            r"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "*test_log_cli_level.py*This log message will be shown",\n=======\n            "WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "*test_log_cli_level.py* This log message will be shown",\n=======\n            "WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\n```python\n### testing/logging/test_reporting.py\n<<<<<<< SEARCH\n            "*test_log_cli_ini_level.py* This log message will be shown",\n=======\n            "WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown",\n>>>>>>> REPLACE\n```\n\n### Summary\n\nWe updated the default log format to include the module name and filename in `src/_pytest/logging.py` and adjusted the unit tests in `testing/logging/test_reporting.py` to match the new log format. These changes should address the issue by providing more useful information in the log messages.', refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1729283058, model='gpt-4o-2024-05-13', object='chat.completion', service_tier=None, system_fingerprint='fp_28a34a3a6a', usage=CompletionUsage(completion_tokens=5668, prompt_tokens=2560, total_tokens=8228, completion_tokens_details=CompletionTokensDetails(audio_tokens=None, reasoning_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=None, cached_tokens=0)))
2024-10-18 13:24:30,839 - INFO - raw output:
Based on the issue statement and the provided patch, it seems the main problem is with the default logging format. We need to update the `DEFAULT_LOG_FORMAT` to include the `name` (module name) and adjust the unit tests accordingly.

Here are the necessary *SEARCH/REPLACE* edits:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

The unit tests in `testing/logging/test_reporting.py` need to be updated to match the new log format:

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
=======
                "CRITICAL *test_log_cli_enabled_disabled.py*test_log_cli_enabled_disabled.py* critical message logged by test",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_default_level.py*WARNING message will be shown*",
=======
            "WARNING*test_log_cli_default_level.py*test_log_cli_default_level.py* message will be shown*",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log teardown(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_level.py*This log message will be shown",
=======
            "*test_log_cli_level.py*test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_level.py* This log message will be shown",
=======
            "*test_log_cli_level.py*test_log_cli_level.py* This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_ini_level.py* This log message will be shown",
=======
            "*test_log_cli_ini_level.py*test_log_cli_ini_level.py* This log message will be shown",
>>>>>>> REPLACE
```

These changes should address the issue by updating the default logging format and ensuring the unit tests reflect the new format.
2024-10-18 13:24:30,839 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,839 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,839 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,839 - INFO - === edit_commands: ===
2024-10-18 13:24:30,839 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,839 - INFO - 
----------------------------------------
2024-10-18 13:24:30,840 - INFO - extracted patch:
2024-10-18 13:24:30,840 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:30,840 - INFO - raw output:
The issue is related to changing the default logging format to include the module name (`name`) instead of just the filename (`filename`). We also need to update the unit tests to reflect this new format.

Let's go ahead and make the necessary changes based on the provided issue and patch texts.

Here are the *SEARCH/REPLACE* edits:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

Next, we need to update the unit tests to match the new format:

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
=======
                "CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_default_level.py*WARNING message will be shown*",
=======
            "WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log teardown(.+)\nWARNING(.+)\n+WARNING(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log finish(.+)\nWARNING(.+)\n+WARNING(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_level.py*This log message will be shown",
=======
            "*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_level.py* This log message will be shown",
=======
            "*pytest_testing.logging.test_reporting:test_log_cli_level.py* This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_ini_level.py* This log message will be shown",
=======
            "*pytest_testing.logging.test_reporting:test_log_cli_ini_level.py* This log message will be shown",
>>>>>>> REPLACE
```

These changes should update the logging format and ensure that the unit tests are checking for the new format as well. 

Here is how the full set of changes would look:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```
```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
=======
                "CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test",
>>>>>>> REPLACE
```
```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_default_level.py*WARNING message will be shown*",
=======
            "WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*",
>>>>>>> REPLACE
```
```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log teardown(.+)\nWARNING(.+)\n+WARNING(.+)",
>>>>>>> REPLACE
```
```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log finish(.+)\nWARNING(.+)\n+WARNING(.+)",
>>>>>>> REPLACE
```
```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_level.py*This log message will be shown",
=======
            "*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE
```
```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_level.py
2024-10-18 13:24:30,840 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,840 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,840 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,840 - INFO - === edit_commands: ===
2024-10-18 13:24:30,840 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,840 - INFO - 
----------------------------------------
2024-10-18 13:24:30,841 - INFO - extracted patch:
2024-10-18 13:24:30,841 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:30,841 - INFO - raw output:
Based on the issue description and the failed unit test, it seems that the problem is primarily with the `DEFAULT_LOG_FORMAT` in the `_pytest/logging.py` file. The user wants to include the module name (`name`) in the log format. Let's localize the bug and provide the necessary changes to fix it.

Here are the necessary *SEARCH/REPLACE* edits:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

Let's review the changes and ensure the `log_cli_format` uses the updated `DEFAULT_LOG_FORMAT`:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
```

That should cover the necessary changes. The updated log format will include the module name, filename, and line number, as requested.

The complete list of changes is as follows:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE

### src/_pytest/logging.py
<<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
```

These updates should fix the issue as described and make sure the logging format includes the module name.
2024-10-18 13:24:30,842 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,842 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,842 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,842 - INFO - === edit_commands: ===
2024-10-18 13:24:30,842 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,842 - INFO - 
----------------------------------------
2024-10-18 13:24:30,842 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:30,842 - INFO - 
----------------------------------------
2024-10-18 13:24:30,843 - INFO - extracted patch:
2024-10-18 13:24:30,843 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:30,843 - INFO - raw output:
Based on the issue statement and the provided patch, the problem seems to be with the logging format. The current format uses `%(filename)` which only includes the base filename. The proposed format should include `%(name)s` (the module name) and possibly `%(pathname)s` (the full path).

To implement this, we will update the `DEFAULT_LOG_FORMAT` in the `src/_pytest/logging.py` file. Here are the necessary changes:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

This change updates the logging format to include the module name (`%(name)s`), the base filename (`%(filename)s`), and the line number (`%(lineno)d`), preceded by the log level (`%(levelname)-8s`).

Next, we need to ensure that this format is used in the appropriate context within the `LoggingPlugin` class. Specifically, this format should be used when setting up CLI logging. Thus, we will also update the `_setup_cli_logging` method:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
```

This ensures that the default format is correctly picked up if not otherwise specified in the configuration.

These changes should address the issue and ensure that the new logging format is correctly applied.
2024-10-18 13:24:30,843 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,843 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,843 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,843 - INFO - === edit_commands: ===
2024-10-18 13:24:30,843 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,843 - INFO - 
----------------------------------------
2024-10-18 13:24:30,843 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:30,843 - INFO - 
----------------------------------------
2024-10-18 13:24:30,844 - INFO - extracted patch:
2024-10-18 13:24:30,844 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:30,844 - INFO - raw output:
To address the issue, we need to update the `DEFAULT_LOG_FORMAT` to include the module name (`name`) as specified in the new format. The tests also need to validate the new format. Let's perform the necessary changes.

### File 1: `src/_pytest/logging.py`

We need to update the `DEFAULT_LOG_FORMAT` to the new format specified in the issue.

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

### File 2: `testing/logging/test_reporting.py`

The tests rely on the old format, so we'll update the expected log lines to match the new format.

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
=======
                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",
>>>>>>> REPLACE

<<<<<<< SEARCH
            "test_log_cli_default_level.py*WARNING message will be shown*",
=======
            "WARNING*test_log_cli_default_level.py* message will be shown*",
>>>>>>> REPLACE

<<<<<<< SEARCH
            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log teardown(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE

<<<<<<< SEARCH
            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE

<<<<<<< SEARCH
            "test_log_cli_level.py*This log message will be shown",
=======
            "*test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE

<<<<<<< SEARCH
            "test_log_cli_level.py* This log message will be shown",
=======
            "*test_log_cli_level.py* This log message will be shown",
>>>>>>> REPLACE

<<<<<<< SEARCH
            "test_log_cli_ini_level.py* This log message will be shown",
=======
            "*test_log_cli_ini_level.py* This log message will be shown",
>>>>>>> REPLACE
```

These changes update the logging format in the main configuration and update the unit tests to align with the new logging format. Now the logs will include the log level, module name, filename, line number, and the message, as specified in the issue description.
2024-10-18 13:24:30,844 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,844 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,844 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,844 - INFO - === edit_commands: ===
2024-10-18 13:24:30,844 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,844 - INFO - 
----------------------------------------
2024-10-18 13:24:30,845 - INFO - extracted patch:
2024-10-18 13:24:30,845 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:30,846 - INFO - raw output:
Based on the issue statement, we need to modify the `DEFAULT_LOG_FORMAT` to include the `name` attribute for better logging details. This change will primarily take place in the `src/_pytest/logging.py` file. Along with that, the relevant test cases need to be updated to reflect this new format.

Here are the necessary *SEARCH/REPLACE* edits:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE


### testing/logging/test_reporting.py
<<<<<<< SEARCH
                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
=======
                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",
>>>>>>> REPLACE
<<<<<<< SEARCH
            "test_log_cli_default_level.py*WARNING message will be shown*",
=======
            "WARNING*test_log_cli_default_level.py* message will be shown*",
>>>>>>> REPLACE
<<<<<<< SEARCH
            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log teardown(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE
<<<<<<< SEARCH
            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE
<<<<<<< SEARCH
            "test_log_cli_level.py*This log message will be shown",
=======
            "*test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE
<<<<<<< SEARCH
            "test_log_cli_level.py* This log message will be shown",
=======
            "*test_log_cli_level.py* This log message will be shown",
>>>>>>> REPLACE
<<<<<<< SEARCH
            "test_log_cli_ini_level.py* This log message will be shown",
=======
            "*test_log_cli_ini_level.py* This log message will be shown",
>>>>>>> REPLACE
```

These changes update the default logging format and ensure that the tests are checking the correct format. Specifically, the format now includes the `name` (module name) along with the filename and line number, providing more detailed log information.
2024-10-18 13:24:30,846 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,846 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,846 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,846 - INFO - === edit_commands: ===
2024-10-18 13:24:30,846 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,846 - INFO - 
----------------------------------------
2024-10-18 13:24:30,847 - INFO - extracted patch:
2024-10-18 13:24:30,847 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:30,847 - INFO - raw output:
Based on the issue statement, it appears that the modification needs to be done in the logging format specified in the `DEFAULT_LOG_FORMAT` and potentially other related log formats within the `_pytest/logging.py` file. The tests provided suggest changes to the expected log output.

Here are the necessary changes:

1. Update the `DEFAULT_LOG_FORMAT` to include the module name (`name`) alongside the filename.
2. Ensure related instances where the log format is used are updated accordingly.

Here's the *SEARCH/REPLACE* edit to address the issue:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

Given that `DEFAULT_LOG_FORMAT` is used to initialize the formatter in the `LoggingPlugin` class, we should also ensure changes in `_setup_cli_logging` method to match the new format.

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
```

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
```

These changes should ensure that the new log format includes the module name and integrates seamlessly with the existing setup.

Next, update the test cases to match the new format:

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
+                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",
=======
-                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",
+                "CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            "test_log_cli_default_level.py*WARNING message will be shown*",
+            "WARNING*test_log_cli_default_level.py* message will be shown*",
=======
-            "WARNING*test_log_cli_default_level.py* message will be shown*",
+            "WARNING*test_log_cli_default_level.py:25* message will be shown*",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log teardown(.+)\nWARNING(.+)\nWARNING(.+)",
=======
-            r"(.+)live log teardown(.+)\nWARNING(.+)\nWARNING(.+)",
+            r"(.+)live log teardown(.+)\nWARNING(.+):test_log_cli_tear(.+)\nWARNING(.+):test_log_cli_tear(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
=======
-            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
+            r"(.+)live log finish(.+)\nWARNING(.+):test_log_cli_finish(.+)\nWARNING(.+):test_log_cli_finish(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            "*test_log_cli_level.py*This log message will be shown",
+            "PASSED",  # 'PASSED' on its own line because the log message prints a new line
=======
-            "PASSED",  # 'PASSED' on its own line because the log message prints a new line
+            "WARNING*test_log_cli_level.py:60*This log message will be shown",
             "PASSED",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            "*test_log_cli_level.py* This log message will be shown",
+            "PASSED",  # 'PASSED' on its own line because the log message prints a new line
=======
-           
2024-10-18 13:24:30,847 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,847 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,847 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,847 - INFO - === edit_commands: ===
2024-10-18 13:24:30,847 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,847 - INFO - 
----------------------------------------
2024-10-18 13:24:30,847 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:30,847 - INFO - 
----------------------------------------
2024-10-18 13:24:30,847 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:30,847 - INFO - 
----------------------------------------
2024-10-18 13:24:30,849 - INFO - extracted patch:
2024-10-18 13:24:30,849 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:30,849 - INFO - raw output:
Based on the issue statement and the provided code snippets, it appears that the issue lies in the default logging format and how it is handled within the `LoggingPlugin` class. The unit tests' outputs also indicate that the logging format does not match the expected format.

Let's focus on updating the `DEFAULT_LOG_FORMAT` to include the `name` (module name) and ensure the unit tests reflect this format.

Here are the required *SEARCH/REPLACE* edits:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

Updating the test expectations to match the new log format:

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
+                "CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test",
=======
-                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
+                "CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            "test_log_cli_default_level.py*WARNING message will be shown*",
+            "WARNING*test_log_cli_default_level.py* message will be shown*",
=======
-            "test_log_cli_default_level.py*WARNING message will be shown*",
+            "WARNING*test_log_cli_default_level.py*message will be shown*",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
-            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log teardown(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
=======
-            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
+            r"(.+)live log finish(.+)\nWARNING(.+)\nWARNING(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            "test_log_cli_level.py* This log message will be shown",
+            "*test_log_cli_level.py* This log message will be shown",
=======
-            "test_log_cli_level.py* This log message will be shown",
+            "*test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            "test_log_cli_level.py* This log message will be shown",
+            "*test_log_cli_level.py* This log message will be shown",
=======
-            "test_log_cli_level.py* This log message will be shown",
+            "*test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
-            "test_log_cli_ini_level.py* This log message will be shown",
+            "*test_log_cli_ini_level.py* This log message will be shown",
=======
-            "test_log_cli_ini_level.py* This log message will be shown",
+            "*test_log_cli_ini_level.py*This log message will be shown",
>>>>>>> REPLACE
```

With these changes, your logging format will include the module name, and the unit tests will match the expected output format.
2024-10-18 13:24:30,849 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,849 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,849 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,849 - INFO - === edit_commands: ===
2024-10-18 13:24:30,849 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,849 - INFO - 
----------------------------------------
2024-10-18 13:24:30,850 - INFO - extracted patch:
2024-10-18 13:24:30,850 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:30,850 - INFO - raw output:
Based on the provided issue statement and the failing unit tests, it seems like we need to improve the default logging format in the `LoggingPlugin` class in the `src/_pytest/logging.py` file. Specifically, we need to adjust the `DEFAULT_LOG_FORMAT` to include the module name (`name`) along with the filename.

Here is the proposed *SEARCH/REPLACE* edit to fix the issue:

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

This should fix the logging format issue as described in the repository issue. The unit tests have also been modified to match the new logging format, where the log level appears first, followed by the module name, filename, and line number.

Applying this change should resolve the formatting problem and ensure that the log output includes the module name as requested.
2024-10-18 13:24:30,850 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,850 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,850 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,850 - INFO - === edit_commands: ===
2024-10-18 13:24:30,850 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,850 - INFO - 
----------------------------------------
2024-10-18 13:24:30,851 - INFO - extracted patch:
2024-10-18 13:24:30,851 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:30,852 - INFO - raw output:
Based on the issue statement and the provided patch, we need to improve the default logging format to include the module name and adjust the unit tests accordingly. Let's generate the required *SEARCH/REPLACE* edits.

### Step 1: Update the Default Log Format in `src/_pytest/logging.py`

```python
### src/_pytest/logging.py
<<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
```

### Step 2: Ensure the Tests Match the New Log Format in `testing/logging/test_reporting.py`

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
                "test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test",
=======
                "CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "test_log_cli_default_level.py*WARNING message will be shown*",
=======
            "WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log teardown(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log teardown(.+)\nWARNING(.+):(.+)\nWARNING(.+):(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            r"(.+)live log finish(.+)\n(.+)WARNING(.+)\n(.+)WARNING(.+)",
=======
            r"(.+)live log finish(.+)\nWARNING(.+):(.+)\nWARNING(.+):(.+)",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "*test_log_cli_level.py*This log message will be shown",
=======
            "WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "*test_log_cli_level.py* This log message will be shown",
=======
            "WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown",
>>>>>>> REPLACE
```

```python
### testing/logging/test_reporting.py
<<<<<<< SEARCH
            "*test_log_cli_ini_level.py* This log message will be shown",
=======
            "WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown",
>>>>>>> REPLACE
```

### Summary

We updated the default log format to include the module name and filename in `src/_pytest/logging.py` and adjusted the unit tests in `testing/logging/test_reporting.py` to match the new log format. These changes should address the issue by providing more useful information in the log messages.
2024-10-18 13:24:30,852 - INFO - === file_to_commands: ===
2024-10-18 13:24:30,852 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:30,852 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:30,852 - INFO - === edit_commands: ===
2024-10-18 13:24:30,852 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:30,852 - INFO - 
----------------------------------------
2024-10-18 13:24:30,853 - INFO - extracted patch:
2024-10-18 13:24:30,853 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:31,151 - INFO - === file_to_commands: ===
2024-10-18 13:24:31,151 - INFO - === file_to_commands: ===
2024-10-18 13:24:31,151 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:31,151 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:31,151 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:31,151 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:31,151 - INFO - === edit_commands: ===
2024-10-18 13:24:31,151 - INFO - === edit_commands: ===
2024-10-18 13:24:31,151 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:31,151 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:31,151 - INFO - 
----------------------------------------
2024-10-18 13:24:31,151 - INFO - 
----------------------------------------
2024-10-18 13:24:31,153 - INFO - extracted patch:
2024-10-18 13:24:31,153 - INFO - extracted patch:
2024-10-18 13:24:31,153 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:31,153 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:31,766 - INFO - === file_to_commands: ===
2024-10-18 13:24:31,766 - INFO - === file_to_commands: ===
2024-10-18 13:24:31,766 - INFO - === file_to_commands: ===
2024-10-18 13:24:31,766 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:31,766 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:31,766 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *pytest_testing.logging.test_reporting:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*pytest_testing.logging.test_reporting:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\n+WARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*pytest_testing.logging.test_reporting:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:31,766 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:31,766 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:31,766 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:31,766 - INFO - === edit_commands: ===
2024-10-18 13:24:31,766 - INFO - === edit_commands: ===
2024-10-18 13:24:31,766 - INFO - === edit_commands: ===
2024-10-18 13:24:31,766 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:31,766 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:31,766 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:31,767 - INFO - 
----------------------------------------
2024-10-18 13:24:31,767 - INFO - 
----------------------------------------
2024-10-18 13:24:31,767 - INFO - 
----------------------------------------
2024-10-18 13:24:31,768 - INFO - extracted patch:
2024-10-18 13:24:31,768 - INFO - extracted patch:
2024-10-18 13:24:31,768 - INFO - extracted patch:
2024-10-18 13:24:31,768 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:31,768 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:31,768 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:32,360 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,360 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,360 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,360 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,360 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,360 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,360 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,360 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,360 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,360 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,360 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,360 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,360 - INFO - === edit_commands: ===
2024-10-18 13:24:32,360 - INFO - === edit_commands: ===
2024-10-18 13:24:32,360 - INFO - === edit_commands: ===
2024-10-18 13:24:32,360 - INFO - === edit_commands: ===
2024-10-18 13:24:32,360 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,360 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,360 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,360 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,361 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,361 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,361 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,361 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,361 - INFO - 
----------------------------------------
2024-10-18 13:24:32,363 - INFO - extracted patch:
2024-10-18 13:24:32,363 - INFO - extracted patch:
2024-10-18 13:24:32,363 - INFO - extracted patch:
2024-10-18 13:24:32,363 - INFO - extracted patch:
2024-10-18 13:24:32,363 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,363 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,363 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,363 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,954 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,954 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,954 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,954 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,954 - INFO - === file_to_commands: ===
2024-10-18 13:24:32,954 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,954 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,954 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,954 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,954 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", DEFAULT_LOG_FORMAT)\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:32,954 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,954 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,954 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,954 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,954 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:32,954 - INFO - === edit_commands: ===
2024-10-18 13:24:32,954 - INFO - === edit_commands: ===
2024-10-18 13:24:32,954 - INFO - === edit_commands: ===
2024-10-18 13:24:32,954 - INFO - === edit_commands: ===
2024-10-18 13:24:32,954 - INFO - === edit_commands: ===
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
>>>>>>> REPLACE
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,954 - INFO - 
----------------------------------------
2024-10-18 13:24:32,956 - INFO - extracted patch:
2024-10-18 13:24:32,956 - INFO - extracted patch:
2024-10-18 13:24:32,956 - INFO - extracted patch:
2024-10-18 13:24:32,956 - INFO - extracted patch:
2024-10-18 13:24:32,956 - INFO - extracted patch:
2024-10-18 13:24:32,956 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,956 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,956 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,956 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:32,956 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", DEFAULT_LOG_FORMAT)
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:33,553 - INFO - === file_to_commands: ===
2024-10-18 13:24:33,553 - INFO - === file_to_commands: ===
2024-10-18 13:24:33,553 - INFO - === file_to_commands: ===
2024-10-18 13:24:33,553 - INFO - === file_to_commands: ===
2024-10-18 13:24:33,553 - INFO - === file_to_commands: ===
2024-10-18 13:24:33,553 - INFO - === file_to_commands: ===
2024-10-18 13:24:33,553 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:33,553 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:33,553 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:33,553 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:33,553 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:33,553 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:33,553 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:33,553 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:33,553 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:33,553 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:33,553 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:33,553 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:33,553 - INFO - === edit_commands: ===
2024-10-18 13:24:33,553 - INFO - === edit_commands: ===
2024-10-18 13:24:33,553 - INFO - === edit_commands: ===
2024-10-18 13:24:33,553 - INFO - === edit_commands: ===
2024-10-18 13:24:33,553 - INFO - === edit_commands: ===
2024-10-18 13:24:33,553 - INFO - === edit_commands: ===
2024-10-18 13:24:33,553 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:33,553 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:33,553 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:33,553 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:33,553 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:33,553 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:33,553 - INFO - 
----------------------------------------
2024-10-18 13:24:33,553 - INFO - 
----------------------------------------
2024-10-18 13:24:33,553 - INFO - 
----------------------------------------
2024-10-18 13:24:33,553 - INFO - 
----------------------------------------
2024-10-18 13:24:33,553 - INFO - 
----------------------------------------
2024-10-18 13:24:33,553 - INFO - 
----------------------------------------
2024-10-18 13:24:33,554 - INFO - extracted patch:
2024-10-18 13:24:33,554 - INFO - extracted patch:
2024-10-18 13:24:33,554 - INFO - extracted patch:
2024-10-18 13:24:33,554 - INFO - extracted patch:
2024-10-18 13:24:33,554 - INFO - extracted patch:
2024-10-18 13:24:33,554 - INFO - extracted patch:
2024-10-18 13:24:33,554 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:33,554 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:33,554 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:33,554 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:33,554 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:33,554 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,124 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,124 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,124 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,124 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,124 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,124 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,124 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,124 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,124 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,124 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,124 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,124 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,124 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,124 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py*This log message will be shown\",\n=======\n            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,124 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,124 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,124 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,124 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,124 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,124 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,124 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,124 - INFO - === edit_commands: ===
2024-10-18 13:24:34,124 - INFO - === edit_commands: ===
2024-10-18 13:24:34,124 - INFO - === edit_commands: ===
2024-10-18 13:24:34,124 - INFO - === edit_commands: ===
2024-10-18 13:24:34,124 - INFO - === edit_commands: ===
2024-10-18 13:24:34,124 - INFO - === edit_commands: ===
2024-10-18 13:24:34,124 - INFO - === edit_commands: ===
2024-10-18 13:24:34,124 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,124 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,124 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,124 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,124 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,124 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,124 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,124 - INFO - 
----------------------------------------
2024-10-18 13:24:34,124 - INFO - 
----------------------------------------
2024-10-18 13:24:34,124 - INFO - 
----------------------------------------
2024-10-18 13:24:34,124 - INFO - 
----------------------------------------
2024-10-18 13:24:34,124 - INFO - 
----------------------------------------
2024-10-18 13:24:34,124 - INFO - 
----------------------------------------
2024-10-18 13:24:34,124 - INFO - 
----------------------------------------
2024-10-18 13:24:34,126 - INFO - extracted patch:
2024-10-18 13:24:34,126 - INFO - extracted patch:
2024-10-18 13:24:34,126 - INFO - extracted patch:
2024-10-18 13:24:34,126 - INFO - extracted patch:
2024-10-18 13:24:34,126 - INFO - extracted patch:
2024-10-18 13:24:34,126 - INFO - extracted patch:
2024-10-18 13:24:34,126 - INFO - extracted patch:
2024-10-18 13:24:34,126 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,126 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,126 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,126 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,126 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,126 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,126 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - === file_to_commands: ===
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n=======\n        self.formatter = logging.Formatter(\n            get_option_ini(config, \"log_format\", \"DEFAULT_LOG_FORMAT\"),\n            get_option_ini(config, \"log_date_format\"),\n        )\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"log_format\")\n=======\n        log_cli_format = get_option_ini(config, \"log_cli_format\", \"DEFAULT_LOG_FORMAT\")\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py:25* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py:25* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+):test_log_cli_tear(.+)\\nWARNING(.+):test_log_cli_tear(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\\nWARNING(.+):test_log_cli_finish(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"*test_log_cli_level.py*This log message will be shown\",\n+            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n=======\n-            \"PASSED\",  # 'PASSED' on its own line because the log message prints a new line\n+            \"WARNING*test_log_cli_level.py:60*This log message will be shown\",\n             \"PASSED\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - === edit_commands: ===
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,671 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format"),
            get_option_ini(config, "log_date_format"),
        )
=======
        self.formatter = logging.Formatter(
            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
            get_option_ini(config, "log_date_format"),
        )
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - <<<<<<< SEARCH
        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
=======
        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
>>>>>>> REPLACE
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,672 - INFO - 
----------------------------------------
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - extracted patch:
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:34,674 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
@@ -394,7 +394,7 @@
 
         self.print_logs = get_option_ini(config, "log_print")
         self.formatter = logging.Formatter(
-            get_option_ini(config, "log_format"),
+            get_option_ini(config, "log_format", "DEFAULT_LOG_FORMAT"),
             get_option_ini(config, "log_date_format"),
         )
         self.log_level = get_actual_log_level(config, "log_level")
@@ -437,7 +437,7 @@
         capture_manager = config.pluginmanager.get_plugin("capturemanager")
         # if capturemanager plugin is disabled, live logging still works.
         log_cli_handler = _LiveLoggingStreamHandler(terminal_reporter, capture_manager)
-        log_cli_format = get_option_ini(config, "log_cli_format", "log_format")
+        log_cli_format = get_option_ini(config, "log_cli_format", "DEFAULT_LOG_FORMAT")
         log_cli_date_format = get_option_ini(
             config, "log_cli_date_format", "log_date_format"
         )
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL *test_log_cli_enabled_disabled.py* critical message logged by test\",\n=======\n-                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n+                \"CRITICAL*test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py* message will be shown*\",\n=======\n-            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n+            \"WARNING*test_log_cli_default_level.py*message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n-            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log teardown(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n=======\n-            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n+            r\"(.+)live log finish(.+)\\nWARNING(.+)\\nWARNING(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_level.py* This log message will be shown\",\n+            \"*test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n-            \"test_log_cli_ini_level.py* This log message will be shown\",\n+            \"*test_log_cli_ini_level.py*This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - === edit_commands: ===
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,230 - INFO - 
----------------------------------------
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - extracted patch:
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,232 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - === file_to_commands: ===
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - === edit_commands: ===
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,801 - INFO - 
----------------------------------------
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - extracted patch:
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:35,803 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - === file_to_commands: ===
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,431 - INFO - {
  "'src/_pytest/logging.py'": [
    "<<<<<<< SEARCH\nDEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n=======\nDEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n>>>>>>> REPLACE"
  ],
  "'testing/logging/test_reporting.py'": [
    "<<<<<<< SEARCH\n                \"test_log_cli_enabled_disabled.py* CRITICAL critical message logged by test\",\n=======\n                \"CRITICAL *test_log_cli_enabled_disabled*:test_log_cli_enabled_disabled.py* critical message logged by test\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"test_log_cli_default_level.py*WARNING message will be shown*\",\n=======\n            \"WARNING*test_log_cli_default_level*:test_log_cli_default_level.py* message will be shown*\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log teardown(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log teardown(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            r\"(.+)live log finish(.+)\\n(.+)WARNING(.+)\\n(.+)WARNING(.+)\",\n=======\n            r\"(.+)live log finish(.+)\\nWARNING(.+):(.+)\\nWARNING(.+):(.+)\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py*This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py*This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_level*:test_log_cli_level.py* This log message will be shown\",\n>>>>>>> REPLACE",
    "<<<<<<< SEARCH\n            \"*test_log_cli_ini_level.py* This log message will be shown\",\n=======\n            \"WARNING*test_log_cli_ini_level*:test_log_cli_ini_level.py* This log message will be shown\",\n>>>>>>> REPLACE"
  ]
}
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edited_file: 'src/_pytest/logging.py' ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - === edit_commands: ===
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - <<<<<<< SEARCH
DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
=======
DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
>>>>>>> REPLACE
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,432 - INFO - 
----------------------------------------
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,433 - INFO - extracted patch:
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
2024-10-18 13:24:36,434 - INFO - --- src/_pytest/logging.py
+++ src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
